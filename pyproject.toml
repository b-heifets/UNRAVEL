[project]
name = "unravel"
version = "1.0.0-beta"
description = "UNRAVEL: UN-biased high-Resolution Analysis and Validation of Ensembles using Light sheet images"
readme = "README.md"
license = { text = "GNU General Public License v3.0" }
authors = [
    { name = "Daniel Ryskamp Rijsketic", email = "danrijs@stanford.edu" }, 
    { name = "Austen Brooks Casey", email = "abcasey@stanford.edu" }, 
    { name = "Boris Dov Heifets", email = "bheifets@stanford.edu" }
]
maintainers = [
    { name = "Daniel Ryskamp Rijsketic", email = "danrijs@stanford.edu" }
]
dependencies = [
    "aicspylibczi>=3.1.2,<4.0.0",
    "antspyx>=0.4.2,<1.0.0",
    "connected_components_3d>=3.12.3,<4.0.0",
    "czifile>=2019.7.2,<2020.0.0",
    "dask>=2023.4.1,<2024.0.0",
    "fslpy>=3.18.2,<4.0.0",
    "h5py>=3.8.0,<4.0.0",
    "lxml>=4.9.3,<5.0.0",
    "matplotlib>=3.7.1,<4.0.0",
    "nibabel>=5.2.1,<6.0.0",
    "numpy>=1.25.2,<2.0.0",
    "opencv_python>=4.7.0.72,<5.0.0",
    "openpyxl>=3.1.2,<4.0.0",
    "pandas>=1.5.3,<2.0.0",
    "rich>=13.7.1,<14.0.0",
    "rich_argparse>=1.4.0,<2.0.0",
    "scipy>=1.13.1,<2.0.0",
    "seaborn>=0.13.2,<1.0.0",
    "setuptools>=65.5.0,<66.0.0",
    "statsmodels>=0.14.0,<1.0.0",
    "termcolor>=2.4.0,<3.0.0",
    "tifffile>=2023.8.30,<2024.0.0",
    "zarr>=2.14.2,<3.0.0"
]

[project.optional-dependencies]
dev = [
    "python-cfonts",
    "pydata_sphinx_theme",
    "sphinx",
    "sphinx-autobuild"
]

[project.urls]
"Homepage" = "https://github.com/b-heifets/UNRAVEL"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["unravel"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project.scripts]
relabel_nii = "unravel.image_tools.atlas.relable_nii:main"
wireframe = "unravel.image_tools.atlas.wireframe:main"
fdr_range = "unravel.cluster_stats.fdr_range:main"
fdr = "unravel.cluster_stats.fdr:main"
recursive_mirror_index = "unravel.cluster_stats.recursively_mirror_rev_cluster_indices:main"
brain_model = "unravel.cluster_stats.brain_model:main"
find_incongruent_clusters = "unravel.cluster_stats.find_incongruent_clusters:main"
sunburst = "unravel.cluster_stats.sunburst:main"
group_data = "unravel.cluster_stats.group_bilateral_data:main"
index = "unravel.cluster_stats.index:main"
legend = "unravel.cluster_stats.legend:main"
org_data = "unravel.cluster_stats.org_data:main"
prism = "unravel.cluster_stats.prism:main"
stats = "unravel.cluster_stats.stats:main"
summary = "unravel.cluster_stats.valid_clusters_summary:main"
table = "unravel.cluster_stats.table:main"
validate_clusters = "unravel.cluster_stats.validate_clusters:main"
crop_clusters = "unravel.cluster_stats.crop_clusters:main"
effect_sizes = "unravel.cluster_stats.effect_sizes.effect_sizes:main"
sex_effect_abs = "unravel.cluster_stats.effect_sizes.effect_sizes_by_sex__absolute:main"
sex_effect_rel = "unravel.cluster_stats.effect_sizes.effect_sizes_by_sex__relative:main"
h5_to_tifs = "unravel.image_io.h5_to_tifs:main"
img_io = "unravel.image_io.img_io:main"
img_to_npy = "unravel.image_io.img_to_npy:main"
nii_hd = "unravel.image_io.nii_hd:main"
nii_info = "unravel.image_io.nii_info:main"
nii_io = "unravel.image_io.nii_io:main"
nii_to_tifs = "unravel.image_io.nii_to_tifs:main"
nii_to_zarr = "unravel.image_io.nii_to_zarr:main"
reorient_nii = "unravel.image_io.reorient_nii:main"
tif_to_tifs = "unravel.image_io.tif_to_tifs:main"
zarr_to_nii = "unravel.image_io.zarr_to_nii:main"
avg = "unravel.image_tools.avg:main"
bbox = "unravel.image_tools.bbox:main"
extend = "unravel.image_tools.extend_image:main"
max = "unravel.image_tools.max:main"
pad = "unravel.image_tools.pad_img:main"
spatial_avg = "unravel.image_tools.spatial_averaging:main"
tif_DoG = "unravel.image_tools.tif_DoG:main"
tif_rb = "unravel.image_tools.tif_rb:main"
transpose_axes = "unravel.image_tools.transpose_axes:main"
unique = "unravel.image_tools.uniq_intensities:main"
rstats_summary = "unravel.region_stats.regional_cell_densities_summary:main"
rstats = "unravel.region_stats.regional_cell_densities:main"
rstats_counts = "unravel.region_stats.regional_counts:main"
rstats_vols = "unravel.region_stats.regional_volumes:main"
rstats_IF_mean = "unravel.region_stats.regional_IF_mean_intensities:main"
rstats_IF_mean_in_seg = "unravel.region_stats.regional_IF_mean_intensities_in_segmented_voxels:main"
rstats_IF_mean_summary = "unravel.region_stats.regional_IF_mean_intensities_summary:main"
check_brain_mask = "unravel.register.check_brain_mask:main"
check_reg = "unravel.register.check_reg:main"
metadata = "unravel.register.metadata:main"
prep_reg = "unravel.register.prep_reg:main"
reg = "unravel.register.reg:main"
brain_mask = "unravel.segment.brain_mask:main"
copy_tifs = "unravel.segment.copy_tifs:main"
seg = "unravel.segment.ilastik_pixel_classification:main"
agg_files_from_dirs = "unravel.utilities.aggregate_files_from_sample_dirs:main" 
agg_files_recursively = "unravel.utilities.aggregate_files_recursively:main"
clean_tifs = "unravel.utilities.clean_tif_dirs:main"
prepend_conditions = "unravel.utilities.prepend_conditions:main"
rename_ = "unravel.utilities.rename:main"
toggle = "unravel.utilities.toggle_samples:main"
apply_mask = "unravel.voxel_stats.apply_mask:main"
hemi_to_avg = "unravel.voxel_stats.hemi_to_LR_avg:main"
whole_to_avg = "unravel.voxel_stats.whole_to_LR_avg:main"
mirror = "unravel.voxel_stats.mirror:main"
prep_vstats = "unravel.voxel_stats.prep_vstats:main"
vstats = "unravel.voxel_stats.vstats:main"
z_score = "unravel.voxel_stats.z_score:main"
to_atlas = "unravel.warp.to_atlas:main"
to_native = "unravel.warp.to_native:main"
warp = "unravel.warp.warp:main"
